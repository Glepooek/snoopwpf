<Grid x:Class="Snoop.Views.TriggersTab.TriggersView"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:converters="clr-namespace:Snoop.Converters"
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
      xmlns:snoop="clr-namespace:Snoop"
      xmlns:triggers="clr-namespace:Snoop.Views.TriggersTab.Triggers"
      xmlns:triggersTab="clr-namespace:Snoop.Views.TriggersTab"
      x:Name="triggerView"
      mc:Ignorable="d">
    <Grid.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="../../Controls/ValueEditors/EditorTemplates.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <Style x:Key="Snoop.TriggerControlStyle"
                   TargetType="{x:Type HeaderedContentControl}">
                <Setter Property="Background" Value="#f7f7f7" />
                <Setter Property="BorderBrush" Value="#d4d4d4" />
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type HeaderedContentControl}">
                            <Border Margin="2"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="1"
                                    CornerRadius="2">
                                <Grid>
                                    <Border Height="18"
                                            VerticalAlignment="Top"
                                            Background="#0F000000" />
                                    <ContentPresenter Style="{x:Null}"
                                                      Margin="20 0 0 0"
                                                      VerticalAlignment="Top"
                                                      Content="{TemplateBinding Header}"
                                                      TextBlock.FontSize="11"
                                                      TextBlock.FontWeight="Bold"
                                                      TextBlock.Foreground="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
                                    <Image Style="{x:Null}"
                                           x:Name="icon"
                                           Width="12"
                                           Height="12"
                                           Margin="4 2 0 0"
                                           HorizontalAlignment="Left"
                                           VerticalAlignment="Top"
                                           Source="{DynamicResource triggerItemDrawingImage}" />
                                    <ContentPresenter Style="{x:Null}"
                                                      Margin="4 16 4 4"
                                                      Content="{TemplateBinding Content}" />
                                </Grid>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <ControlTemplate x:Key="Snoop.TriggersView.ListBoxControlTemplate"
                             TargetType="{x:Type ListBox}">
                <Border Name="Bd"
                        Padding="1"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        SnapsToDevicePixels="true">
                    <ItemsPresenter Style="{x:Null}"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                </Border>
                <ControlTemplate.Triggers>
                    <Trigger Property="IsEnabled" Value="false">
                        <Setter TargetName="Bd" Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
                    </Trigger>
                    <Trigger Property="IsGrouping" Value="true">
                        <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>

            <!-- ========================= -->
            <!-- Setters -->
            <!-- ========================= -->

            <DataTemplate DataType="{x:Type triggers:SetterItem}">
                <Grid Margin="2">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"
                                          SharedSizeGroup="key" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>

                    <TextBlock Style="{x:Null}"
                               x:Name="key"
                               Grid.Column="0"
                               Background="Transparent"
                               Text="{Binding Value.DisplayName, Mode=OneWay}" />
                    <ContentPresenter Style="{x:Null}"
                                      x:Name="value"
                                      Grid.Column="1"
                                      Margin="4 0 0 0"
                                      Content="{Binding Value}"
                                      ContentTemplateSelector="{StaticResource EditorSelector}" />
                </Grid>

                <DataTemplate.Triggers>
                    <DataTrigger Binding="{Binding IsOverridden}" Value="True">
                        <Setter TargetName="key" Property="TextBlock.TextDecorations" Value="Strikethrough" />
                        <Setter TargetName="value" Property="TextBlock.TextDecorations" Value="Strikethrough" />
                    </DataTrigger>
                </DataTemplate.Triggers>
            </DataTemplate>

            <!-- ========================= -->
            <!-- TriggerActions -->
            <!-- ========================= -->

            <DataTemplate DataType="{x:Type triggers:TriggerActionItem}">
                <Grid Margin="2">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>

                    <TextBlock Style="{x:Null}"
                               x:Name="key"
                               Grid.Column="0"
                               Background="Transparent"
                               Text="{Binding DescriptiveValue, Mode=OneWay}"
                               TextTrimming="CharacterEllipsis"
                               ToolTip="{Binding ToolTip, Mode=OneWay}"
                               ToolTipService.ShowDuration="60000" />
                </Grid>
            </DataTemplate>

            <!-- ========================= -->
            <!-- Triggers -->
            <!-- ========================= -->

            <DataTemplate DataType="{x:Type triggers:TriggerItemBase}">
                <HeaderedContentControl Style="{StaticResource Snoop.TriggerControlStyle}"
                                        x:Name="triggerControl"
                                        Header="{Binding TriggerType}">
                    <StackPanel Style="{x:Null}">
                        <TextBlock Style="{x:Null}"
                                   Margin="4 4 4 0"
                                   Text="Conditions" />
                        <ItemsControl Style="{x:Null}"
                                      Margin="8 4"
                                      ItemsSource="{Binding Conditions}">
                            <ItemsControl.ItemTemplate>
                                <DataTemplate DataType="{x:Type triggers:ConditionItem}">
                                    <Grid>
                                        <Grid.RowDefinitions>
                                            <RowDefinition />
                                            <RowDefinition />
                                        </Grid.RowDefinitions>
                                        <StackPanel Style="{x:Null}"
                                                    Orientation="Horizontal">
                                            <Image Style="{x:Null}"
                                                   x:Name="image"
                                                   Width="16"
                                                   Height="16"
                                                   Source="{DynamicResource inActiveDrawingImage}" />
                                            <TextBlock Style="{x:Null}"
                                                       x:Name="conditionText"
                                                       Margin="2 0 0 0"
                                                       Text="{Binding Condition}" />
                                        </StackPanel>

                                        <Border Style="{x:Null}"
                                                x:Name="errorPane"
                                                Grid.Row="1"
                                                Background="Red"
                                                TextElement.Foreground="White"
                                                Visibility="Collapsed">
                                            <StackPanel Style="{x:Null}"
                                                        Orientation="Horizontal">
                                                <Image Style="{x:Null}"
                                                       x:Name="warningImage"
                                                       Width="16"
                                                       Height="16"
                                                       Source="{DynamicResource warningDrawingImage}"
                                                       ToolTip="{Binding Error}" />

                                                <TextBlock Style="{x:Null}"
                                                           x:Name="errorText"
                                                           Margin="2 0 0 0"
                                                           Text="{Binding Error}" />
                                            </StackPanel>
                                        </Border>
                                    </Grid>

                                    <DataTemplate.Triggers>
                                        <DataTrigger Binding="{Binding IsActive}" Value="True">
                                            <Setter TargetName="conditionText" Property="FontWeight" Value="Bold" />
                                            <Setter TargetName="image" Property="Source" Value="{DynamicResource activeDrawingImage}" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding HasError}" Value="True">
                                            <Setter TargetName="errorPane" Property="Visibility" Value="Visible" />
                                        </DataTrigger>
                                    </DataTemplate.Triggers>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>
                        <TextBlock Style="{x:Null}"
                                   Margin="4 4 4 0"
                                   Text="Setters" />
                        <ListBox Margin="8 4"
                                 Grid.IsSharedSizeScope="True"
                                 ItemsSource="{Binding Setters}"
                                 ScrollViewer.VerticalScrollBarVisibility="Disabled"
                                 SelectedItem="{Binding SelectedSetterItem, RelativeSource={RelativeSource AncestorType=triggersTab:TriggersView}, Mode=TwoWay}"
                                 Template="{StaticResource Snoop.TriggersView.ListBoxControlTemplate}"
                                 Visibility="{Binding Setters.IsEmpty, Converter={x:Static converters:BoolToVisibilityConverter.DefaultInstance}, ConverterParameter=True}" />
                        <TextBlock Style="{x:Null}"
                                   Margin="8 4"
                                   Text="The trigger has no setters"
                                   Visibility="{Binding Setters.IsEmpty, Converter={x:Static converters:BoolToVisibilityConverter.DefaultInstance}}"
                                   Opacity="0.6" />

                        <TextBlock Style="{x:Null}"
                                   Margin="4 4 4 0"
                                   Text="EnterActions"
                                   Visibility="{Binding EnterActions.IsEmpty, Converter={x:Static converters:BoolToVisibilityConverter.DefaultInstance}, ConverterParameter=True}" />
                        <ListBox Margin="8 4"
                                 Grid.IsSharedSizeScope="True"
                                 ItemsSource="{Binding EnterActions}"
                                 ScrollViewer.VerticalScrollBarVisibility="Disabled"
                                 Template="{StaticResource Snoop.TriggersView.ListBoxControlTemplate}"
                                 Visibility="{Binding EnterActions.IsEmpty, Converter={x:Static converters:BoolToVisibilityConverter.DefaultInstance}, ConverterParameter=True}" />

                        <TextBlock Style="{x:Null}"
                                   Margin="4 4 4 0"
                                   Text="ExitActions"
                                   Visibility="{Binding ExitActions.IsEmpty, Converter={x:Static converters:BoolToVisibilityConverter.DefaultInstance}, ConverterParameter=True}" />
                        <ListBox Margin="8 4"
                                 Grid.IsSharedSizeScope="True"
                                 ItemsSource="{Binding ExitActions}"
                                 ScrollViewer.VerticalScrollBarVisibility="Disabled"
                                 Template="{StaticResource Snoop.TriggersView.ListBoxControlTemplate}"
                                 Visibility="{Binding ExitActions.IsEmpty, Converter={x:Static converters:BoolToVisibilityConverter.DefaultInstance}, ConverterParameter=True}" />
                    </StackPanel>
                </HeaderedContentControl>
                <DataTemplate.Triggers>
                    <DataTrigger Binding="{Binding IsActive}" Value="True">
                        <Setter TargetName="triggerControl" Property="Background" Value="{DynamicResource ActiveTriggerBrush}" />
                    </DataTrigger>
                </DataTemplate.Triggers>
            </DataTemplate>
        </ResourceDictionary>
    </Grid.Resources>

    <Grid Visibility="{Binding HasTriggerItems, ElementName=triggerView, Converter={x:Static converters:BoolToVisibilityConverter.DefaultInstance}, ConverterParameter=True}">
        <Grid.RowDefinitions>
            <RowDefinition Height="5*" />
            <!--<RowDefinition Height="1*"/>-->
        </Grid.RowDefinitions>

        <ScrollViewer Grid.Row="0"
                      HorizontalScrollBarVisibility="Disabled">
            <ItemsControl Style="{x:Null}"
                          ItemsSource="{Binding TriggerItems, ElementName=triggerView}">
                <ItemsControl.GroupStyle>
                    <GroupStyle>
                        <GroupStyle.Panel>
                            <ItemsPanelTemplate>
                                <StackPanel Style="{x:Null}" />
                            </ItemsPanelTemplate>
                        </GroupStyle.Panel>
                        <GroupStyle.ContainerStyle>
                            <Style TargetType="{x:Type GroupItem}">
                                <Setter Property="Margin" Value="0 0 0 2" />
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type GroupItem}">
                                            <StackPanel Style="{x:Null}"
                                                        Margin="8">
                                                <TextBlock Style="{x:Null}"
                                                           VerticalAlignment="Center"
                                                           FontWeight="Bold"
                                                           Foreground="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                                                           Text="{Binding Path=Name}" />
                                                <ItemsPresenter Style="{x:Null}"
                                                                Margin="0 4 0 0" />
                                            </StackPanel>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </GroupStyle.ContainerStyle>
                    </GroupStyle>
                </ItemsControl.GroupStyle>
            </ItemsControl>
        </ScrollViewer>

        <!--<GridSplitter Grid.Row="1"
                      Height="4"
                      HorizontalAlignment="Stretch"
                      VerticalAlignment="Top"
                      Margin="2,0,2,0" />

        <Grid Grid.Row="1"
              Margin="2,4,2,0">
            <snoop:PropertyInspector RootTarget="{Binding SelectedSetterItem.Setter, ElementName=triggerView}" />
        </Grid>-->
    </Grid>

    <TextBlock Style="{x:Null}"
               HorizontalAlignment="Center"
               VerticalAlignment="Center"
               Text="The element has no triggers"
               Visibility="{Binding HasTriggerItems, ElementName=triggerView, Converter={x:Static converters:BoolToVisibilityConverter.DefaultInstance}}"
               Opacity="0.6" />
</Grid>