<!--
    (c) Copyright Cory Plotts.
    This source is subject to the Microsoft Public License (Ms-PL).
    Please see http://go.microsoft.com/fwlink/?LinkID=131993 for details.
    All other rights reserved.
-->
<controls:Inspector x:Class="Snoop.Controls.PropertyGrid2"
                    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:controls="clr-namespace:Snoop.Controls"
                    xmlns:converters="clr-namespace:Snoop.Converters"
                    xmlns:infrastructure="clr-namespace:Snoop.Infrastructure"
                    x:Name="PropertyGrid"
                    MinWidth="0"
                    MinHeight="0">
    <Grid.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="ValueEditors\EditorTemplates.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <ContextMenu x:Key="PropertyMenu">
                <MenuItem Command="{x:Static controls:PropertyInspector.DelveCommand}"
                          CommandParameter="{Binding}">
                    <MenuItem.Header>
                        <Label Margin="0"
                               Padding="0"
                               Content="Delve" />
                    </MenuItem.Header>
                </MenuItem>
                <MenuItem Command="{x:Static controls:PropertyInspector.DelveBindingCommand}"
                          CommandParameter="{Binding}">
                    <MenuItem.Header>
                        <Label Margin="0"
                               Padding="0"
                               Content="Delve Binding" />
                    </MenuItem.Header>
                </MenuItem>
                <MenuItem Command="{x:Static controls:PropertyInspector.DelveBindingExpressionCommand}"
                          CommandParameter="{Binding}">
                    <MenuItem.Header>
                        <Label Margin="0"
                               Padding="0"
                               Content="Delve BindingExpression" />
                    </MenuItem.Header>
                </MenuItem>
                <MenuItem Command="{x:Static controls:PropertyGrid2.ShowBindingErrorsCommand}"
                          CommandParameter="{Binding}">
                    <MenuItem.Header>
                        <Label Margin="0"
                               Padding="0"
                               Content="Display Binding Errors" />
                    </MenuItem.Header>
                </MenuItem>
                <MenuItem Command="{x:Static controls:PropertyGrid2.ClearCommand}"
                          CommandParameter="{Binding}">
                    <MenuItem.Header>
                        <Label Margin="0"
                               Padding="0"
                               Content="Clear/Reset" />
                    </MenuItem.Header>
                </MenuItem>
                <MenuItem Command="{x:Static controls:PropertyInspector.CopyResourceNameCommand}"
                          CommandParameter="{Binding}">
                    <MenuItem.Header>
                        <Label Margin="0"
                               Padding="0"
                               Content="Copy Resource Name" />
                    </MenuItem.Header>
                </MenuItem>
                <MenuItem Command="{x:Static controls:PropertyInspector.CopyXamlCommand}"
                          CommandParameter="{Binding}">
                    <MenuItem.Header>
                        <Label Margin="0"
                               Padding="0"
                               Content="Copy XAML" />
                    </MenuItem.Header>
                </MenuItem>
            </ContextMenu>

            <Style TargetType="{x:Type GridViewColumnHeader}">
                <Setter Property="Command" Value="{x:Static controls:PropertyGrid2.SortCommand}" />
            </Style>

            <ControlTemplate x:Key="BreakpointTemplate"
                             TargetType="{x:Type CheckBox}">
                <Grid>
                    <Image Style="{x:Null}"
                           Name="Icon"
                           Width="12"
                           Height="12"
                           Source="{DynamicResource noBreakpointDrawingImage}" />
                </Grid>
                <ControlTemplate.Triggers>
                    <Trigger Property="IsChecked" Value="True">
                        <Setter TargetName="Icon" Property="Source" Value="{DynamicResource breakpointDrawingImage}" />
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>

            <DataTemplate x:Key="ValueSourceTemplate"
                          DataType="infrastructure:PropertyInformation">
                <TextBlock Style="{x:Null}"
                           Height="16"
                           Text="{Binding ValueSourceBaseValueSource}">
                    <TextBlock.ToolTip>
                        <TextBlock Style="{x:Null}"
                                   Text="{Binding ValueSourceBaseValueSource}" />
                    </TextBlock.ToolTip>
                </TextBlock>
            </DataTemplate>
        </ResourceDictionary>
    </Grid.Resources>

    <Grid.RowDefinitions>
        <RowDefinition Height="*" />
    </Grid.RowDefinitions>

    <ListView Style="{x:Null}"
              x:Name="ListView"
              Grid.RowSpan="2"
              MinWidth="0"
              MinHeight="0"
              HorizontalContentAlignment="Stretch"
              AlternationCount="2"
              IsSynchronizedWithCurrentItem="True"
              ItemsSource="{Binding ElementName=PropertyGrid, Path=Properties}"
              SelectedItem="{Binding ElementName=PropertyGrid, Path=Selection, Mode=TwoWay}">
        <!-- cplotts note: -->
        <!-- does turning virtualization off actually improve performance? let's play with this later. -->
        <!--
		<ListView.ItemsPanel>
			<ItemsPanelTemplate>
				<StackPanel Style="{x:Null}" />
			</ItemsPanelTemplate>
		</ListView.ItemsPanel>
		-->

        <ListView.ItemContainerStyle>
            <Style TargetType="{x:Type ListViewItem}">
                <Setter Property="ContextMenu" Value="{StaticResource PropertyMenu}" />
                <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                <Style.Triggers>

                    <Trigger Property="ItemsControl.AlternationIndex" Value="0">
                        <Setter Property="Background" Value="Transparent" />
                    </Trigger>
                    <Trigger Property="ItemsControl.AlternationIndex" Value="1">
                        <Setter Property="Background" Value="#FFEAEAEA" />
                    </Trigger>

                    <DataTrigger Binding="{Binding IsLocallySet}" Value="False">
                        <Setter Property="Foreground" Value="Black" />
                    </DataTrigger>
                    <!--<DataTrigger Binding="{Binding IsOdd}" Value="False">
						<Setter Property="Background" Value="#FFEAEAEA"/>
					</DataTrigger>-->
                    <DataTrigger Binding="{Binding IsExpression}" Value="True">
                        <Setter Property="Background" Value="LightGreen" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding IsAnimated}" Value="True">
                        <Setter Property="Background" Value="LightSalmon" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding IsInvalidBinding}" Value="True">
                        <Setter Property="Background" Value="Red" />
                        <Setter Property="Foreground" Value="White" />
                    </DataTrigger>
                    <Trigger Property="IsSelected" Value="True">
                        <Setter Property="Background" Value="LightGray" />
                    </Trigger>
                    <DataTrigger Binding="{Binding HasChangedRecently}" Value="True">
                        <Setter Property="Background" Value="Yellow" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>
        </ListView.ItemContainerStyle>
        <ListView.View>
            <GridView>
                <GridViewColumn Width="25">
                    <GridViewColumn.CellTemplate>
                        <DataTemplate DataType="infrastructure:PropertyInformation">
                            <CheckBox IsChecked="{Binding BreakOnChange}"
                                      Template="{StaticResource BreakpointTemplate}">
                                <CheckBox.ToolTip>
                                    <TextBlock Style="{x:Null}"
                                               Text="Click here to toggle a debug breakpoint on and off." />
                                </CheckBox.ToolTip>
                            </CheckBox>
                        </DataTemplate>
                    </GridViewColumn.CellTemplate>
                </GridViewColumn>

                <GridViewColumn Width="200">
                    <GridViewColumn.Header>
                        <TextBlock Style="{x:Null}"
                                   Text="Name">
                            <TextBlock.ToolTip>
                                <TextBlock Style="{x:Null}"
                                           Text="The name of the property" />
                            </TextBlock.ToolTip>
                        </TextBlock>
                    </GridViewColumn.Header>
                    <GridViewColumn.CellTemplate>
                        <DataTemplate DataType="infrastructure:PropertyInformation">
                            <TextBlock Style="{x:Null}"
                                       MouseLeftButtonDown="HandleNameClick"
                                       Text="{Binding DisplayName}">
                                <TextBlock.ToolTip>
                                    <TextBlock Style="{x:Null}"
                                               Text="{Binding DisplayName}" />
                                </TextBlock.ToolTip>
                            </TextBlock>
                        </DataTemplate>
                    </GridViewColumn.CellTemplate>
                </GridViewColumn>

                <GridViewColumn Width="250"
                                CellTemplateSelector="{StaticResource EditorSelector}">
                    <GridViewColumn.Header>
                        <TextBlock Style="{x:Null}"
                                   Text="Value">
                            <TextBlock.ToolTip>
                                <TextBlock Style="{x:Null}"
                                           Text="The value of the property" />
                            </TextBlock.ToolTip>
                        </TextBlock>
                    </GridViewColumn.Header>
                </GridViewColumn>

                <GridViewColumn Width="143">
                    <GridViewColumn.Header>
                        <TextBlock Style="{x:Null}"
                                   Text="Value Source">
                            <TextBlock.ToolTip>
                                <StackPanel Style="{x:Null}">
                                    <TextBlock Style="{x:Null}"
                                               Text="This is the value source of the property," />
                                    <TextBlock Style="{x:Null}"
                                               Text="i.e. from where the property gets its value." />
                                </StackPanel>
                            </TextBlock.ToolTip>
                        </TextBlock>
                    </GridViewColumn.Header>
                    <GridViewColumn.CellTemplate>
                        <DataTemplate>
                            <ContentControl Style="{x:Null}"
                                            x:Name="ContentHost"
                                            Content="{Binding}"
                                            ContentTemplate="{StaticResource ValueSourceTemplate}" />
                        </DataTemplate>
                    </GridViewColumn.CellTemplate>
                </GridViewColumn>

                <GridViewColumn Width="200">
                    <GridViewColumn.Header>
                        <TextBlock Style="{x:Null}"
                                   Text="Binding Errors">
                            <TextBlock.ToolTip>
                                <StackPanel Style="{x:Null}">
                                    <TextBlock Style="{x:Null}"
                                               Text="This column gives additional info on any binding errors." />
                                    <TextBlock Style="{x:Null}"
                                               Text="Note: the row for any property with binding errors will" />
                                    <TextBlock Style="{x:Null}"
                                               Text="have a red background." />
                                </StackPanel>
                            </TextBlock.ToolTip>
                        </TextBlock>
                    </GridViewColumn.Header>
                    <GridViewColumn.CellTemplate>
                        <DataTemplate DataType="infrastructure:PropertyInformation">
                            <DockPanel LastChildFill="True"
                                       Visibility="{Binding IsInvalidBinding, Converter={x:Static converters:BoolToVisibilityConverter.DefaultInstance}}">
                                <Button Command="{x:Static controls:PropertyInspector.UpdateBindingErrorCommand}"
                                        CommandParameter="{Binding}"
                                        Content="Get error message"
                                        DockPanel.Dock="Left">
                                    <Button.Visibility>
                                        <MultiBinding Converter="{x:Static converters:BoolToVisibilityConverter.DefaultInstance}">
                                            <Binding Converter="{x:Static converters:IsNullOrEmptyStringConverter.DefaultInstance}"
                                                     Path="BindingError" />
                                        </MultiBinding>
                                    </Button.Visibility>
                                </Button>
                                <TextBox Style="{x:Null}"
                                         MaxHeight="50"
                                         IsReadOnly="True"
                                         IsReadOnlyCaretVisible="True"
                                         Text="{Binding BindingError, Mode=OneWay}"
                                         TextWrapping="Wrap"
                                         VerticalScrollBarVisibility="Auto">
                                    <TextBox.ToolTip>
                                        <TextBlock Style="{x:Null}"
                                                   Text="{Binding BindingError}" />
                                    </TextBox.ToolTip>
                                    <TextBox.Visibility>
                                        <MultiBinding Converter="{x:Static converters:BoolToVisibilityConverter.DefaultInstance}"
                                                      ConverterParameter="true">
                                            <Binding Converter="{x:Static converters:IsNullOrEmptyStringConverter.DefaultInstance}"
                                                     Path="BindingError" />
                                        </MultiBinding>
                                    </TextBox.Visibility>
                                </TextBox>
                            </DockPanel>
                        </DataTemplate>
                    </GridViewColumn.CellTemplate>
                </GridViewColumn>
            </GridView>
        </ListView.View>
    </ListView>
</controls:Inspector>